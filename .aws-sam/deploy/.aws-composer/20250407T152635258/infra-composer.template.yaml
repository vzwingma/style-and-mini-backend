Transform: AWS::Serverless-2016-10-31
Description: |
  SAM Template pour l'application Style & Mini - __ENV__
Globals:
  Function:
    Timeout: 3
    Tracing: Active
  Api:
    TracingEnabled: true
Resources:
  StyleMiniBackend__ENV__:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Fonction ${AWS::StackName}
        - ResourceName: StyleMiniBackend__ENV__
      CodeUri: dist/
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      MemorySize: 3008
      Policies: 
        - AWSLambdaBasicExecutionRole
        - S3WritePolicy:
            BucketName: !Ref S3UploadBucket
      Events:
        ApiBackend__ENV__ANYapiv1uri:
          Type: Api
          Properties:
            Path: /api/v1/{uri+}
            Method: ANY
            RestApiId: !Ref ApiBackend__ENV__
      Environment:
        Variables:
          MONGO_DB_URI: __DATABASE_URL__
          MONGO_DB_DATABASE: __DATABASE_NAME__
          NODE_ENV: __ENV__
          API_AUTH: __API_AUTH__
          API_PWD: __API_PWD__
          UploadBucket: !Ref S3UploadBucket
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - app.js
        External:
          - '@aws-sdk/*'
          - aws-sdk
        Minify: true
        Target: es2020
        Sourcemap: true
      SamResourceId: StyleMiniBackend__ENV__
  StyleMiniBackendLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${StyleMiniBackend__ENV__}
  ApiBackend__ENV__:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${AWS::StackName}
        - ResourceName: ApiBackend__ENV__
      Description: API Gateway pour Style & Mini - __ENV__
      StageName: Qua
      DefinitionBody:
        openapi: '3.0'
        info: {}
        paths:
          /api/v1/{uri+}:
            x-amazon-apigateway-any-method:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${StyleMiniBackend__ENV__.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
      Cors:
        MaxAge: 5
  ## S3 bucket
  S3UploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
            - "*"
          AllowedMethods:
            - GET
            - PUT
            - HEAD
          AllowedOrigins:
            - "*"
      Description: !Sub
        - S3 ${AWS::StackName}
        - ResourceName: S3 Buckets pour Style & Mini